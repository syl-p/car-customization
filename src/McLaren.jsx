/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 ./public/models/free_mclaren_p1_mso.glb 
Author: bohmerang (https://sketchfab.com/bohmerang)
License: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
Source: https://sketchfab.com/3d-models/free-mclaren-p1-mso-c7687064e08c4be9a0af88e98bcf0a8e
Title: FREE - McLaren P1 MSO
*/

import React, { useEffect, useLayoutEffect, useRef, useState } from 'react'
import { Decal, PivotControls, TransformControls, useGLTF, useTexture } from '@react-three/drei'
import { useCustomization } from './contexts/Customization'
import * as THREE from "three"
import { applyProps, useThree } from '@react-three/fiber'
import { useControls } from 'leva'
import { Route } from 'wouter'

export function McLaren(props) {
  const { mainColor, secondaryColor, mainColorsPalette, setTirePosition, setColorPosition, material, setSpoilerPosition, setTopPosition, setBoardPosition, rimsMaterial } = useCustomization()
  const { nodes, materials } = useGLTF('/models/free_mclaren_p1_mso.glb')

  // Pos and rot for sticker
  const [pos, setXYZ] = useState([0, 0, -0]);
  const [rot, setRot] = useState([0, 1, 0]);
  const sticker = useRef()

  const { debug, image, scale } = useControls({
    debug: false,
    image: { image: "/react.png" },
    scale: { value: 1, min: 0, max: 2 },
  });

  const board = useRef()
  const tire = useRef()
  const color = useRef()
  const top = useRef()
  const spoiler = useRef()

  const silverMaterial = new THREE.MeshStandardMaterial({ roughness: 0.3, metalness: 1, color: "#e2e2e2" });
  const bluePaintMaterial = materials.Blue.clone()

  useLayoutEffect(() => {
    applyProps(materials.WhitePaintjob, { roughness: 0.45, metalness: 0.8, toneMapped: true })
    applyProps(bluePaintMaterial, { roughness: 0.45, metalness: 0.8, emissiveIntensity: -0.5, toneMapped: false })
    applyProps(materials.Glass, { color: 'black', roughness: 0, clearcoat: 0.1 })
  }, [nodes, materials])

  useEffect(() => {
    let target = new THREE.Vector3()
    const tirePosition = tire.current.getWorldPosition(target)

    target = new THREE.Vector3()
    const colorPosition = color.current.getWorldPosition(target)
    colorPosition.y += 1.4

    target = new THREE.Vector3()
    const spoilerPosition = spoiler.current.getWorldPosition(target)

    target = new THREE.Vector3()
    const boardPosition = board.current.getWorldPosition(target)

    setColorPosition(colorPosition)
    setTirePosition(tirePosition)
    setSpoilerPosition(new THREE.Vector3(-0.8, 1, 0))
    setTopPosition(new THREE.Vector3(0, 1, 0))
    setBoardPosition(boardPosition)
  }, [])


  return (
    <group {...props} dispose={null}>
      <group position={[0.635, 0.328, 1.328]}>
        <group position={[0.199, -0.006, 0.005]} ref={board}>
          <mesh receiveShadow castShadow geometry={nodes.Object_91.geometry} material={rimsMaterial === 'silver' ? silverMaterial : materials.Rims} />
          <mesh receiveShadow castShadow geometry={nodes.Object_92.geometry} material={materials.Details} />
        </group>
        <mesh receiveShadow castShadow geometry={nodes.Object_94.geometry} material={materials.tires} />
        <mesh receiveShadow castShadow geometry={nodes.Object_95.geometry} material={materials.tires} />
        <mesh receiveShadow castShadow geometry={nodes.Object_96.geometry} material={materials.tires2} ref={tire} />
      </group>
      <group position={[0.635, 0.328, -1.342]}>
        <group position={[0.173, -0.006, 0.005]}>
          <mesh receiveShadow castShadow geometry={nodes.Object_99.geometry} material={rimsMaterial === 'silver' ? silverMaterial : materials.Rims} />
          <mesh receiveShadow castShadow geometry={nodes.Object_100.geometry} material={materials.Details} />
        </group>
        <mesh receiveShadow castShadow geometry={nodes.Object_102.geometry} material={materials.tires} />
        <mesh receiveShadow castShadow geometry={nodes.Object_103.geometry} material={materials.tires} />
        <mesh receiveShadow castShadow geometry={nodes.Object_104.geometry} material={materials.tires2} />
      </group>
      <group position={[-0.793, 0.328, -1.342]}>
        <group position={[-0.173, -0.006, 0.005]}>
          <mesh receiveShadow castShadow geometry={nodes.Object_107.geometry} material={rimsMaterial === 'silver' ? silverMaterial : materials.Rims} />
          <mesh receiveShadow castShadow geometry={nodes.Object_108.geometry} material={materials.Details} />
        </group>
        <mesh receiveShadow castShadow geometry={nodes.Object_110.geometry} material={materials.tires} />
        <mesh receiveShadow castShadow geometry={nodes.Object_111.geometry} material={materials.tires} />
        <mesh receiveShadow castShadow geometry={nodes.Object_112.geometry} material={materials.tires2} />
      </group>
      <group position={[-0.793, 0.328, 1.328]}>
        <group position={[-0.199, -0.006, 0.005]}>
          <mesh receiveShadow castShadow geometry={nodes.Object_115.geometry} material={rimsMaterial === 'silver' ? silverMaterial : materials.Rims} />
          <mesh receiveShadow castShadow geometry={nodes.Object_116.geometry} material={materials.Details} />
        </group>
        <mesh receiveShadow castShadow geometry={nodes.Object_118.geometry} material={materials.tires} />
        <mesh receiveShadow castShadow geometry={nodes.Object_119.geometry} material={materials.tires} />
        <mesh receiveShadow castShadow geometry={nodes.Object_120.geometry} material={materials.tires2} />
      </group>
      <mesh receiveShadow castShadow geometry={nodes.Object_5.geometry} material={materials.BrakeDisk} />
      <mesh receiveShadow castShadow geometry={nodes.Object_7.geometry} material={materials.BrakeDisk} />
      <mesh receiveShadow castShadow geometry={nodes.Object_9.geometry} material={materials.Brakes} />

      {/* Freins */}
      <mesh receiveShadow castShadow geometry={nodes.Object_10.geometry} material={bluePaintMaterial} material-color={mainColorsPalette[secondaryColor].color} />

      {/* TOP AND OTHERS DETAILS */}
      <mesh receiveShadow castShadow geometry={nodes.Object_12.geometry} material={material == "carbon" ? materials.Carbon2 : materials.WhitePaintjob} ref={top} />

      <mesh receiveShadow castShadow geometry={nodes.Object_14.geometry} material={materials.Decals} />
      <mesh receiveShadow castShadow geometry={nodes.Object_16.geometry} material={materials.Details} />
      <mesh receiveShadow castShadow geometry={nodes.Object_17.geometry} material={materials.Blue} />
      <mesh receiveShadow castShadow geometry={nodes.Object_19.geometry} material={materials.Engine1} />
      <mesh receiveShadow castShadow geometry={nodes.Object_20.geometry} material={materials.Engine4} />
      <mesh receiveShadow castShadow geometry={nodes.Object_21.geometry} material={materials.Engine4} />
      <mesh receiveShadow castShadow geometry={nodes.Object_22.geometry} material={materials.Engine3} />
      <mesh receiveShadow castShadow geometry={nodes.Object_23.geometry} material={materials.Engine2} />
      <mesh receiveShadow castShadow geometry={nodes.Object_25.geometry} material={materials.Exhaust} />
      <mesh receiveShadow castShadow geometry={nodes.Object_27.geometry} material={materials.Glass} />
      <mesh receiveShadow castShadow geometry={nodes.Object_29.geometry} material={materials.Grid1} />
      <mesh receiveShadow castShadow geometry={nodes.Object_31.geometry} material={materials.Grid} />
      <mesh receiveShadow castShadow geometry={nodes.Object_33.geometry} material={materials.Grille} />
      <mesh receiveShadow castShadow geometry={nodes.Object_35.geometry} material={materials.Headlights} />
      <mesh receiveShadow castShadow geometry={nodes.Object_36.geometry} material={materials.HeadlightsEmissive} />

      {/* Interior */}
      <mesh receiveShadow castShadow geometry={nodes.Object_38.geometry} material={materials.Blue} material-color={mainColorsPalette[secondaryColor].color} />
      <mesh receiveShadow castShadow geometry={nodes.Object_39.geometry} material={materials.Blue} />
      <mesh receiveShadow castShadow geometry={nodes.Object_40.geometry} material={materials.Blue} />

      <mesh receiveShadow castShadow geometry={nodes.Object_41.geometry} material={materials.Interior} />
      <mesh receiveShadow castShadow geometry={nodes.Object_43.geometry} material={materials.Black} />
      <mesh receiveShadow castShadow geometry={nodes.Object_44.geometry} material={materials.Black} />
      <mesh receiveShadow castShadow geometry={nodes.Object_45.geometry} material={materials.Black} />
      <mesh receiveShadow castShadow geometry={nodes.Object_46.geometry} material={materials.Black} />
      <mesh receiveShadow castShadow geometry={nodes.Object_47.geometry} material={materials.Black} />
      <mesh receiveShadow castShadow geometry={nodes.Object_48.geometry} material={materials.Black} />
      <mesh receiveShadow castShadow geometry={nodes.Object_50.geometry} material={materials.Carbon1} />
      <mesh receiveShadow castShadow geometry={nodes.Object_51.geometry} material={materials.Carbon1} />
      <mesh receiveShadow castShadow geometry={nodes.Object_52.geometry} material={materials.Carbon1} />

      {/* sub line */}
      <mesh receiveShadow castShadow geometry={nodes.Object_53.geometry} material={bluePaintMaterial} material-color={mainColorsPalette[secondaryColor].color} />

      {/* Main color */}
      <mesh receiveShadow castShadow geometry={nodes.Object_55.geometry} material={materials.WhitePaintjob} material-color={mainColorsPalette[mainColor].color} ref={color} />

      <mesh receiveShadow castShadow geometry={nodes.Object_56.geometry} material={material == 'carbon' ? materials.Carbon : materials.WhitePaintjob} />

      <mesh receiveShadow castShadow geometry={nodes.Object_57.geometry} material={bluePaintMaterial} material-color={mainColorsPalette[secondaryColor].color} />

      <mesh receiveShadow castShadow geometry={nodes.Object_59.geometry} material={materials.Plastics} />
      <mesh receiveShadow castShadow geometry={nodes.Object_61.geometry} material={materials.Mechanicals} />
      {/* <mesh receiveShadow castShadow geometry={nodes.Object_63.geometry} material={materials.Mirror} /> */}
      <mesh receiveShadow castShadow geometry={nodes.Object_63.geometry} material={materials.Mirror} />
      <mesh receiveShadow castShadow geometry={nodes.Object_65.geometry} material={materials.Pipes} />
      <mesh receiveShadow castShadow geometry={nodes.Object_67.geometry} material={materials.Plate} />
      <mesh receiveShadow castShadow geometry={nodes.Object_69.geometry} material={materials.Black} />
      <mesh receiveShadow castShadow geometry={nodes.Object_71.geometry} material={materials.Glossy} />
      <mesh receiveShadow castShadow geometry={nodes.Object_73.geometry} material={materials.SafetyBelt} />
      <mesh receiveShadow castShadow geometry={nodes.Object_75.geometry} material={materials.GridSoundSytem} />

      {/* Spoiler */}
      <mesh receiveShadow castShadow geometry={nodes.Object_77.geometry} material={material == 'carbon' ? materials.Carbon : materials.WhitePaintjob} ref={spoiler} />

      {/* <mesh receiveShadow castShadow geometry={nodes.Object_77.geometry}>
        <mesh receiveShadow castShadowStandardMaterial {...carbonTexture} side={THREE.DoubleSide}/>
      </mesh> */}

      {/* Under Spoiler */}
      <mesh receiveShadow castShadow geometry={nodes.Object_79.geometry} material={bluePaintMaterial} material-color={mainColorsPalette[secondaryColor].color} />
      <mesh receiveShadow castShadow geometry={nodes.Object_81.geometry} material={materials.Black} />
      <mesh receiveShadow castShadow geometry={nodes.Object_83.geometry} material={materials.Glossy} />
      <mesh receiveShadow castShadow geometry={nodes.Object_85.geometry} material={materials.Stitchwork} />
      <mesh receiveShadow castShadow geometry={nodes.Object_87.geometry} material={materials.TaillightsEmissive} />
      <mesh receiveShadow castShadow geometry={nodes.Object_88.geometry} material={materials.TaillightsReflective} />
    </group >
  )
}

useGLTF.preload('/models/free_mclaren_p1_mso.glb')
